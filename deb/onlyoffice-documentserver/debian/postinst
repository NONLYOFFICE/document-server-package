#!/bin/sh
# postinst script for onlyoffice
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

DIR="/var/www/onlyoffice"
LOG_DIR="/var/log/onlyoffice"
APP_DIR="/var/lib/onlyoffice"
DEFAULT_CONFIG="/etc/onlyoffice/documentserver/default.json"
LICENSE_FILE="$DIR/documentserver/LICENSE.txt"

OLD_VERSION="$2"

DB_HOST=""
DB_USER=""
DB_PWD=""
DB_NAME=""

db_capb escape

install_db(){
	db_get onlyoffice/db-host || true
	DB_HOST="$RET"
	db_get onlyoffice/db-user || true
	DB_USER="$RET"
	db_get onlyoffice/db-pwd || true
	DB_PWD="$RET"
	db_get onlyoffice/db-name || true
	DB_NAME="$RET"

	MYSQL="mysql -s -h$DB_HOST -u$DB_USER"
	if [ -n "$DB_PWD" ]; then
		MYSQL="$MYSQL -p$DB_PWD"
	fi

	# test mysql connection
	set +e
	$MYSQL -e ";" &>/dev/null
	ERRCODE=$?
	if [ $ERRCODE -ne 0 ]; then
		service mysql start &>/dev/null
		$MYSQL -e ";" &>/dev/null || { echo "ERROR: can't connect to mysql database"; exit 1; }
	fi
	set -e

	if [ "$OLD_VERSION" = "" ]; then
		$MYSQL -e "CREATE DATABASE IF NOT EXISTS $DB_NAME CHARACTER SET utf8 COLLATE 'utf8_general_ci';"
	fi

	$MYSQL "$DB_NAME" < "$DIR/documentserver/server/schema/createdb.sql"
}

apply_connection_string(){
  JSON="json -I -q -f $DEFAULT_CONFIG"

  $JSON -e "this.services.CoAuthoring.sql.dbHost = '$DB_HOST'"
  $JSON -e "this.services.CoAuthoring.sql.dbName = '$DB_NAME'"
  $JSON -e "this.services.CoAuthoring.sql.dbUser = '$DB_USER'"
  $JSON -e "this.services.CoAuthoring.sql.dbPass = '$DB_PWD'"
}

get_license_type(){
  LICENSE_NAME=$1
  case "$LICENSE_NAME" in
    "Opensource")
      LICENSE_TYPE=opensource
      ;;
    "Commercial")
      LICENSE_TYPE=integration
      ;;
    *)
      ;;
  esac
}

case "$1" in
	configure)
		adduser --quiet --home "$DIR" --system --group onlyoffice

		# add nginx user to onlyoffice group to allow access to used unix socket
		adduser --quiet www-data onlyoffice

		#install node modules
		npm list -g json >/dev/null 2>&1 || npm install -g json >/dev/null 2>&1

		install_db
		apply_connection_string

		# modify permissions for onlyoffice files and folders
		mkdir -p "$LOG_DIR/documentserver/docservice"
		mkdir -p "$LOG_DIR/documentserver-example"
		mkdir -p "$LOG_DIR/documentserver/converter"
		mkdir -p "$LOG_DIR/documentserver/spellchecker"
		mkdir -p "$LOG_DIR/documentserver/metrics"
		mkdir -p "$LOG_DIR/documentserver/gc"

		mkdir -p "$APP_DIR/documentserver/App_Data"
		mkdir -p "$APP_DIR/documentserver/App_Data/cache/files"

		mkdir -p "$DIR/Data"
		mkdir -p "$DIR/documentserver-example/public/files"
		chown onlyoffice:onlyoffice -R "$DIR"

		# generate allfonts.js and thumbnail
		documentserver-generate-allfonts.sh

		chown onlyoffice:onlyoffice -R "$LOG_DIR"
		chown onlyoffice:onlyoffice -R "$APP_DIR"

		# configure ngninx for onlyoffice
		rm -f /etc/nginx/sites-enabled/default
		mkdir -p /var/cache/nginx/onlyoffice/documentserver
		chown www-data:www-data /var/cache/nginx/onlyoffice/documentserver

                db_get onlyoffice/license-type
                get_license_type "$RET"

                db_metaget onlyoffice/${LICENSE_TYPE}-license-notice extended_description
                echo "$RET" | fmt > $LICENSE_FILE

		# call db_stop to prevent installation hang
		db_stop

		# restart dependent services
		service supervisor restart >/dev/null 2>&1
		service nginx restart >/dev/null 2>&1
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
